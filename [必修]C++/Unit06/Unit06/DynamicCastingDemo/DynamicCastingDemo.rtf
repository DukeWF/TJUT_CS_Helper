{\rtf1\ansi\deff0\deftab720{\fonttbl{\f0\fmodern Consolas;}}
{\colortbl\red0\green128\blue0;\red0\green0\blue0;\red255\green0\blue0;\red51\green153\blue255;\red0\green0\blue255;\red128\green0\blue128;}
{\info{\comment Generated by the SynEdit RTF exporter}
{\title DynamicCastingDemo.rtf}}

\deflang1033\pard\plain\f0\fs30 \cf0 #include "AbstractGeometricObject.h"
\par #include "DerivedCircle2.h"
\par #include "Rectangle2.h"
\par #include <iostream>
\par \cf1\b using\b0  \b namespace\b0  std\cf2\b ;
\par 
\par \b0\cf3\i // A function for displaying a geometric object
\par \i0\cf1\b void\b0  displayGeometricObject\cf2\b (\b0\cf1 GeometricObject \cf2\b &\b0\cf1 object\cf2\b )
\par \{
\par \b0\cf1   cout \cf2\b <<\b0\cf1  \cf4\b "The area is "\b0\cf1  \cf2\b <<\b0\cf1  object\cf2\b .\b0\cf1 getArea\cf2\b ()\b0\cf1  \cf2\b <<\b0\cf1  endl\cf2\b ;
\par \b0\cf1   cout \cf2\b <<\b0\cf1  \cf4\b "The perimeter is "\b0\cf1  \cf2\b <<\b0\cf1  object\cf2\b .\b0\cf1 getPerimeter\cf2\b ()\b0\cf1  \cf2\b <<\b0\cf1  endl\cf2\b ;
\par 
\par \b0\cf1   GeometricObject \cf2\b *\b0\cf1 p \cf2\b =\b0\cf1  \cf2\b &\b0\cf1 object\cf2\b ;
\par \b0\cf1   Circle \cf2\b *\b0\cf1 p1 \cf2\b =\b0\cf1  \b dynamic_cast\cf2 <\b0\cf1 Circle\cf2\b *>(\b0\cf1 p\cf2\b );
\par \b0\cf1   Rectangle \cf2\b *\b0\cf1 p2 \cf2\b =\b0\cf1  \b dynamic_cast\cf2 <\b0\cf1 Rectangle\cf2\b *>(\b0\cf1 p\cf2\b );
\par 
\par \b0\cf1   \b if\b0  \cf2\b (\b0\cf1 p1 \cf2\b !=\b0\cf1  \cf5 0\cf2\b )
\par \b0\cf1   \cf2\b \{
\par \b0\cf1     cout \cf2\b <<\b0\cf1  \cf4\b "The radius is "\b0\cf1  \cf2\b <<\b0\cf1  p1\cf2\b ->\b0\cf1 getRadius\cf2\b ()\b0\cf1  \cf2\b <<\b0\cf1  endl\cf2\b ;
\par \b0\cf1     cout \cf2\b <<\b0\cf1  \cf4\b "The diameter is "\b0\cf1  \cf2\b <<\b0\cf1  p1\cf2\b ->\b0\cf1 getDiameter\cf2\b ()\b0\cf1  \cf2\b <<\b0\cf1  endl\cf2\b ;
\par \b0\cf1   \cf2\b \}
\par 
\par \b0\cf1   \b if\b0  \cf2\b (\b0\cf1 p2 \cf2\b !=\b0\cf1  \cf5 0\cf2\b )
\par \b0\cf1   \cf2\b \{
\par \b0\cf1     cout \cf2\b <<\b0\cf1  \cf4\b "The width is "\b0\cf1  \cf2\b <<\b0\cf1  p2\cf2\b ->\b0\cf1 getWidth\cf2\b ()\b0\cf1  \cf2\b <<\b0\cf1  endl\cf2\b ;
\par \b0\cf1     cout \cf2\b <<\b0\cf1  \cf4\b "The height is "\b0\cf1  \cf2\b <<\b0\cf1  p2\cf2\b ->\b0\cf1 getHeight\cf2\b ()\b0\cf1  \cf2\b <<\b0\cf1  endl\cf2\b ;
\par \b0\cf1   \cf2\b \}
\par \}
\par 
\par \cf1 int\b0  main\cf2\b ()
\par \{
\par \b0\cf1   Circle circle\cf2\b (\b0\cf5 5\cf2\b );
\par \b0\cf1   Rectangle rectangle\cf2\b (\b0\cf5 5\cf2\b ,\b0\cf1  \cf5 3\cf2\b );
\par 
\par \b0\cf1   cout \cf2\b <<\b0\cf1  \cf4\b "Circle info: "\b0\cf1  \cf2\b <<\b0\cf1  endl\cf2\b ;
\par \b0\cf1   displayGeometricObject\cf2\b (\b0\cf1 circle\cf2\b );
\par 
\par \b0\cf1   cout \cf2\b <<\b0\cf1  \cf4\b "\\nRectangle info: "\b0\cf1  \cf2\b <<\b0\cf1  endl\cf2\b ;
\par \b0\cf1   displayGeometricObject\cf2\b (\b0\cf1 rectangle\cf2\b );
\par 
\par \b0\cf1   \b return\b0  \cf5 0\cf2\b ;
\par \}
\par }